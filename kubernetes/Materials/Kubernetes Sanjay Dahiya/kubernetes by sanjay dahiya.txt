Kubernetes Master node configuration
=========================================================================================================================

free -h
swapoff -a
free -h
yum install vim* -y
vim /etc/fstab
#swap
cd


Kubernetes Ports :-
=========================================

Protocol   Direction	     Port Range	         Purpose	              Used By
TCP	   Inbound	     6443	         Kubernetes API server	        All
TCP	   Inbound	     2379-2380	         etcd server client API	    kube-apiserver, etcd
TCP	   Inbound	     10250	         Kubelet API	            Self, Control plane
TCP	   Inbound	     10259	         kube-scheduler	                Self
TCP	   Inbound	     10257	         kube-controller-manager	Self

firewall-cmd --add-port={6443,10250,10259,10257,2379-2380}/tcp
firewall-cmd --permanent --add-port={6443,10250,10259,10257,2379-2380}/tcp
firewall-cmd --complete-reload
firewall-cmd --list-all

OR

systemctl stop firewalld
systemctl disable firewalld


# Docker
==================================== 

yum install -y yum-utils
sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
sudo yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
sudo systemctl start docker
sudo systemctl enable docker
sudo systemctl status docker


# Set SELinux in permissive mode (effectively disabling it)

sudo setenforce 0
sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

# This overwrites any existing configuration in /etc/yum.repos.d/kubernetes.repo

cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/
enabled=1
gpgcheck=1
gpgkey=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/repodata/repomd.xml.key
exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
EOF

sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
systemctl start kubelet
sudo systemctl enable --now kubelet


Firewall Solution
=====================================

rm /etc/containerd/config.toml               y
systemctl restart containerd
echo '1' > /proc/sys/net/ipv4/ip_forward
modprobe bridge
modprobe br_netfilter
sudo systemctl status containerd


kubeadm init --pod-network-cidr=192.168.0.0/16 --ignore-preflight-errors=all

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config


Pod network
===========================

kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.2/manifests/tigera-operator.yaml
kubectl create -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.2/manifests/custom-resources.yaml
kubectl get pods -n calico-system

systemctl restart kubelet
systemctl status kubelet

After connection with worker
====================================
kubectl get nodes
kubectl get pods -n kube-system -o wide





Kubernetes worker node configuration
=============================================================================================================================


free -h
swapoff -a
free -h
yum install vim* -y
vim /etc/fstab
#swap
cd


Kubernetes Ports :-
=========================================

Protocol   Direction	     Port Range	         Purpose	              Used By
TCP	   Inbound	     6443	         Kubernetes API server	        All
TCP	   Inbound	     2379-2380	         etcd server client API	    kube-apiserver, etcd
TCP	   Inbound	     10250	         Kubelet API	            Self, Control plane
TCP	   Inbound	     10259	         kube-scheduler	                Self
TCP	   Inbound	     10257	         kube-controller-manager	Self

firewall-cmd --add-port={6443,10250,10259,10257,2379-2380}/tcp
firewall-cmd --permanent --add-port={6443,10250,10259,10257,2379-2380}/tcp
firewall-cmd --complete-reload
firewall-cmd --list-all

OR

systemctl stop firewalld
systemctl disable firewalld

# Docker 

yum install -y yum-utils
sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
sudo yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
sudo systemctl start docker
sudo systemctl enable docker
sudo systemctl status docker


# Set SELinux in permissive mode (effectively disabling it)

sudo setenforce 0
sudo sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

# This overwrites any existing configuration in /etc/yum.repos.d/kubernetes.repo

cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
[kubernetes]
name=Kubernetes
baseurl=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/
enabled=1
gpgcheck=1
gpgkey=https://pkgs.k8s.io/core:/stable:/v1.29/rpm/repodata/repomd.xml.key
exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
EOF



rm /etc/containerd/config.toml               y
systemctl restart containerd
echo '1' > /proc/sys/net/ipv4/ip_forward
modprobe bridge
modprobe br_netfilter

sudo yum install -y kubelet kubeadm kubectl --disableexcludes=kubernetes
sudo systemctl enable --now kubelet

kubeadm join 192.168.29.124:6443 --token cqoeq1.7rhx9h476qss2qfx --discovery-token-ca-cert-hash sha256:c18b2819e64188d8f790bb424c24b1549b562782f8586685184ee42b4c67b3fa



